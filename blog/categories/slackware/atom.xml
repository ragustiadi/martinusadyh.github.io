<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Slackware | Martinus Ady H. BloG]]></title>
  <link href="http://martinusadyh.github.io/blog/categories/slackware/atom.xml" rel="self"/>
  <link href="http://martinusadyh.github.io/"/>
  <updated>2013-11-17T21:32:41+07:00</updated>
  <id>http://martinusadyh.github.io/</id>
  <author>
    <name><![CDATA[Martinus Ady H]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Finding Duplicate File in Linux]]></title>
    <link href="http://martinusadyh.github.io/2012/09/01/finding-duplicate-file-in-linux/"/>
    <updated>2012-09-01T21:12:48+07:00</updated>
    <id>http://martinusadyh.github.io/2012/09/01/finding-duplicate-file-in-linux</id>
    <content type="html"><![CDATA[<p>Kemarin ada yang tanya, gimana sih caranya mencari file duplicate di <strong>GNU/Linux</strong> ? Setelah beberapa kali mencari bantuan di <a href="http://google.com">Google</a> akhirnya ketemu juga caranya yaitu dengan menjalankan perintah seperti dibawah ini :
[plain]
$ find /tmp -type f | rev | sort | sed -nr &lsquo;:a N;/^([^/]<em>\/).</em>\n\1/p;D;ba&rsquo; | uniq | rev
[/plain]
Catatan: Direktori <code>/tmp</code> bisa kita ganti ke direktori yang di inginkan.</p>

<p>Tips ini saya temukan secara tidak sengeja di <a href="http://google.com">Google</a> tapi sayang-nya lupa dimana tepat-nya, jadi supaya tidak lupa saya posting sekalian di blog supaya bisa jadi referensi di kemudian hari :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Embedding Your Binary Files into Shell Script]]></title>
    <link href="http://martinusadyh.github.io/2012/08/04/how-to-embedding-your-binary-files-into-shell-script/"/>
    <updated>2012-08-04T14:47:56+07:00</updated>
    <id>http://martinusadyh.github.io/2012/08/04/how-to-embedding-your-binary-files-into-shell-script</id>
    <content type="html"><![CDATA[<p>Pada tulisan kali ini, kita akan membahas bagaimana membuat sebuah shell script yang berisi sebuah <strong><em>binary file</em></strong>. Apa sih sebenarnya yang bisa kita lakukan dengan sebuah shell script yang berisi file binary ? Hm.. sebenarnya banyak sih, dan salah satunya adalah membuat installer untuk sistem operasi GNU/Linux seperti installer milik <strong>NetBeans IDE</strong> yang mempunyai ekstensi <strong>*.sh</strong> :)</p>

<p>Nah untuk membantu tujuan kita diatas, kita membutuhkan bantuan sebuah shell script yaitu <a href="http://megastep.org/makeself/">makeself</a>. Untuk yang belum tahu apa itu script makeself, dibawah ini adalah deskripsi singkat tentang  script makeself :</p>

<blockquote><p><a href="http://megastep.org/makeself/">makeself.sh</a> is a small shell script that generates a self-extractable tar.gz archive from a directory. The resulting file appears as a shell script (many of those have a .run suffix), and can be launched as is. The archive will then uncompress itself to a temporary directory and an optional arbitrary command will be executed (for example an installation script). This is pretty similar to archives generated with WinZip Self-Extractor in the Windows world. Makeself archives also include checksums for integrity self-validation (CRC and/or MD5 checksums).</p></blockquote>

<p>Dan yang menggembirakan lagi adalah, script makeself ini sudah di test dan dapat digunakan pada beberapa sistem operasi yang kurang lebih seperti berikut :</p>

<ol>
<li><p> Linux (all distributions)</p></li>
<li><p> Sun Solaris (8 and above)</p></li>
<li><p> HP-UX (tested on 11.0 and 11i on HPPA RISC)</p></li>
<li><p> SCO OpenUnix and OpenServer</p></li>
<li><p> IBM AIX 5.1L</p></li>
<li><p> MacOS X (Darwin)</p></li>
<li><p> SGI IRIX 6.5</p></li>
<li><p> FreeBSD</p></li>
<li><p> UnicOS / Cray</p></li>
<li><p>. Cygwin (Windows)</p></li>
</ol>


<p>Sedangkan yang sudah menggunakan script ini sebagai installer mereka adalah :</p>

<ol>
<li><p> Game patches and installers for <a href="http://www.idsoftware.com/">Id Software games</a> like Quake 3 for Linux or Return To Castle Wolfenstien ;</p></li>
<li><p> All game patches released by <a href="http://www.lokigames.com/products/myth2/updates.php3">Loki Software</a> for the Linux version of popular games</p></li>
<li><p> The <a href="http://www.nvidia.com/">nVidia drivers</a> for Linux</p></li>
<li><p> The installer for the Linux version of <a href="http://earth.google.com/">Google Earth</a></p></li>
<li><p> The <a href="http://www.virtualbox.org/">VirtualBox</a> installers for Linux</p></li>
<li><p> The Makeself distribution itself ;&ndash;)</p></li>
</ol>


<p>Menarik bukan ? Masih tertarik bagaimana caranya menggunakan script ini untuk membuat sebuah installer sendiri ?</p>

<!-- more -->


<p>Jika iya, maka sekarang downloadlah dahulu script makeself <a href="http://megastep.org/makeself/makeself-2.1.5.run">disini</a> yang pada saat tulisan ini dibuat mempunyai versi 2.1.5, atau kalau mau versi yang lebih baru bisa mengikuti timeline project ini di <a href="https://github.com/megastep/makeself">halaman github makeself</a>. Jika proses download sudah selesai, simpanlah file <code>makeself-2.1.5.run</code> pada sebuah direktori dengan nama <strong>test-makeself</strong>. Sebelum mulai menggunakan, beri hak <strong><em>execute</em></strong> dahulu pada file <code>makeself-2.1.5.run</code> dengan perintah <code>chmod +x makeself-2.1.5.run</code> dan ekstrak dengan menjalankan perintah <code>./makeself-2.1.5.run</code>. Hasil dari perintah tadi akan membuat sebuah direktori <strong>makeself-2.1.5</strong> yang berisi script makeself seluruh-nya seperti terlihat dari perintah <code>tree</code> dibawah ini :</p>

<pre><code>martinus@artivisi:[~/tmp/test-makeself]$ tree
.
├── makeself-2.1.5
│   ├── COPYING
│   ├── makeself.1
│   ├── makeself-header.sh
│   ├── makeself.lsm
│   ├── makeself.sh
│   ├── README
│   └── TODO
└── makeself-2.1.5.run

1 directory, 8 files
martinus@artivisi:[~/tmp/test-makeself]$ 
</code></pre>

<p>Untuk percobaan, sekarang buatlah 2 direktori <code>binary</code> dan <code>result</code> didalam direktori <code>makeself-2.1.5</code> seperti terlihat dibawah ini :</p>

<pre><code>martinus@artivisi:[~/tmp/test-makeself]$ tree
.
├── makeself-2.1.5
│   ├── binary
│   ├── COPYING
│   ├── makeself.1
│   ├── makeself-header.sh
│   ├── makeself.lsm
│   ├── makeself.sh
│   ├── README
│   ├── result
│   └── TODO
└── makeself-2.1.5.run
martinus@artivisi:[~/tmp/test-makeself]$ 
</code></pre>

<p>Fungsi direktori <code>binary</code> diatas adalah untuk menempatkan aplikasi yang akan kita distribusikan, sedangkan direktori <code>result</code> adalah untuk menyimpan file installer yang akan dibuat oleh script <code>makeself</code> :)</p>

<p>Jika sudah, masukkanlah direktori aplikasi yang ingin kita distribusikan kedalam direktori <code>binary</code> dan sebuah shell script dengan nama <code>pre-install.sh</code> (nama file <code>pre-install.sh</code> ini hanya sebagai contoh saja) sebagai launcher didalam direktori <code>binary</code> seperti dibawah ini:</p>

<pre><code>martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5/binary]$ tree
.
├── app
│   ├── lib
│   │   ├── MartinSwingUtil-1.0.0.jar
│   │   ├── mysql-connector-java-5.1.6-bin.jar
│   │   └── swing-layout-1.0.4.jar
│   ├── MenuLogin.jar
│   └── README.TXT
└── pre-install.sh

2 directories, 6 files
martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5/binary]$ 
</code></pre>

<blockquote><p>Direktori <code>app/</code> beserta isinya adalah contoh aplikasi yang ingin di distribusikan, untuk penggunaan sebenar-nya kita bisa memasukkan apa saja didalam direktori <code>binary</code>.</p></blockquote>

<p>File <code>pre-install.sh</code> ini dapat digunakan untuk melakukan proses-proses yang dibutuhkan sebelum mulai menginstall aplikasi yang sebenar-nya, seperti contohnya :</p>

<ol>
<li><p> Melakukan pengecekan apakah user <strong>root</strong> atau bukan yang menjalankan installer.</p></li>
<li><p> Melakukan pengecekan apakah library yang dibutuhkan oleh aplikasi sudah tersedia atau belum.</p></li>
<li><p> Melakukan restore database (dibutuhkan opsi untuk memasukkan username dan password mysql yang digunakan oleh user)</p></li>
<li><p> Menempatkan file konfigurasi aplikasi pada direktori-direktori yang telah ditentukan.</p></li>
<li><p> dan lain-lain &hellip; :)</p></li>
</ol>


<p>Sebelum bermain lebih lanjut dengan script <code>pre-install.sh</code>, mari kita buat dahulu skenario yang akan dijalankan oleh script <code>pre-install.sh</code> kita. Sebagai contoh, kita membuat skenario seperti dibawah ini :</p>

<ol>
<li><p> Installer hanya dapat dijalankan oleh user yang mempunyai hak akses <strong>root</strong>.</p></li>
<li><p> Copy direktori <code>app</code> ke direktori <code>opt/</code></p></li>
<li><p> Beri hak akses 755 pada direktori <code>/opt/app</code> beserta isinya supaya dapat dijalankan oleh user.</p></li>
</ol>


<p>Setelah kita mempunyai skenario seperti diatas, sekarang saatnya untuk bermain-main dengan script <code>pre-install.sh</code>, dan kode untuk skenario diatas adalah seperti berikut :</p>

<pre><code>#!/bin/sh
# 
# Contoh file pre-install.sh

# Langkah pertama, pengecekan apakah user root yang menjalankan installer
# ini. Jika bukan user root, tampilkan pesan bagaimana menjalankan installer
# dan exit.
if [ "$(id -u)" != "0" ]; then
    echo "Usage : sudo ./installerku.sh"
    exit 1
else
    # Langkah kedua, copy direktori app/ beserta isinya kedalam direktori
    # /opt
    echo "Sedang menginstall aplikasi ...."
    cp -R app /opt/app

    echo "Memberi hak akses ..."
    chmod 755 -R /opt/app

    echo "Proses installasi selesai !!!"
fi
</code></pre>

<p>Sampai disini proses yang kita lakukan sudah bisa dibilang hampir selesai, hanya tinggal 1 proses lagi yaitu membuat installer-nya. Sekarang mari kita buat sebuah installer menggunakan script <code>makeself</code> dan pastikan bahwa kita berada didalam direktori <code>makeself-2.1.5</code> :) Jika sudah, kita bisa menjalankan script <code>makeself</code> dengan perintah <code>./makeself.sh [parameter1] [parameter2] [parameter3] [parameter4]</code> dimana :</p>

<ol>
<li><p> <strong>[parameter1]</strong>, adalah tempat dimana kita meletakkan aplikasi yang ingin di distribusikan. (Dalam contoh kita, adalah direktori <code>binary</code>).</p></li>
<li><p> <strong>[parameter2]</strong>, adalah nama file installer yang ingin kita buat. (Sebagai contoh pada tulisan ini, nama file installer yang akan kita buat bernama <code>installerku.sh</code> dan akan ditempatkan pada direktori <code>result</code>).</p></li>
<li><p> <strong>[parameter3]</strong>, adalah label untuk installer aplikasi yang ingin kita distribusikan.</p></li>
<li><p> <strong>[parameter4]</strong>, script yang ingin kita jalankan ketika proses installasi. (Dalam contoh kita adalah script <code>pre-install.sh</code>)</p></li>
</ol>


<p>Setelah mengetahui parameter-parameter yang akan digunakan, sekarang jalankan perintah <code>./makeself.sh binary/ result/installerku.sh "Aplikasi Login v1.0" ./pre-install.sh</code> seperti dibawah ini :</p>

<pre><code>martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5]$ ./makeself.sh binary/ result/installerku.sh "Aplikasi Login v1.0" ./pre-install.sh
Header is 401 lines long

About to compress 889 KB of data...
Adding files to archive named "result/installerku.sh"...
./
./app/
./app/lib/
./app/lib/mysql-connector-java-5.1.6-bin.jar
./app/lib/MartinSwingUtil-1.0.0.jar
./app/lib/swing-layout-1.0.4.jar
./app/README.TXT
./app/MenuLogin.jar
./pre-install.sh
CRC: 677728827
MD5: 3b84ed4eb87351a2eac8b0f235490fca

Self-extractible archive "result/installerku.sh" successfully created.
martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5]$ 
</code></pre>

<p>Sekarang cek pada direktori <code>result/</code>, harusnya kita sudah mempunyai file dengan nama <code>installerku.sh</code> seperti dibawah ini :</p>

<pre><code>martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5]$ ls result/
installerku.sh
martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5]$
</code></pre>

<p>Sekarang mari kita test script <code>installerku.sh</code> dengan mencoba menjalankan-nya tanpa menggunakan akses root, apakah yang akan terjadi ?</p>

<pre><code>martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5/result]$ ./installerku.sh 
Verifying archive integrity... All good.
Uncompressing Aplikasi Login v1.0.........
Usage : sudo ./installerku.sh
martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5/result]$ 
</code></pre>

<p>Yuuhu&hellip; proses installasi gagal dilakukan, sekarang mari kita coba menjalankan script <code>installerku.sh</code> menggunakan <code>sudo</code> seperti dibawah ini :</p>

<pre><code>martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5/result]$ sudo ./installerku.sh 
Verifying archive integrity... All good.
Uncompressing Aplikasi Login v1.0.........
Sedang menginstall aplikasi ....
Memberi hak akses ...
Proses installasi selesai !!!
martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5/result]$ 
</code></pre>

<p>Hore.. berhasil, sekarang mari kita check apakah direktori <code>app/</code> beserta isinya sudah masuk kedalam direktori <code>opt/</code> ?</p>

<pre><code>martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5/result]$ ls -l /opt/app/
total 52
drwxr-xr-x 3 root root  4096 Jul 29 06:12 app
drwxr-xr-x 2 root root  4096 Jul 29 05:41 lib
-rwxr-xr-x 1 root root 38591 Jul 29 05:41 MenuLogin.jar
-rwxr-xr-x 1 root root  1447 Jul 29 05:41 README.TXT
martinus@artivisi:[/tmp/test-makeself/makeself-2.1.5/result]$ 
</code></pre>

<p>Mantap&hellip; akhirnya kita bisa membuat sendiri installer di GNU/Linux seperti installer-installer dari project-project besar opensource yang lain :) Nah untuk teman-teman sesama programmer ada yang tertarik untuk mencoba-nya ??</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building Mozilla Firefox 9.0.1 for Slackware 13.37]]></title>
    <link href="http://martinusadyh.github.io/2012/01/07/building-mozilla-firefox-9-0-1-for-slackware-13-37/"/>
    <updated>2012-01-07T09:34:52+07:00</updated>
    <id>http://martinusadyh.github.io/2012/01/07/building-mozilla-firefox-9-0-1-for-slackware-13-37</id>
    <content type="html"><![CDATA[<p><a href="http://martinusadyh.web.id/wp-content/uploads/2012/01/firefox.png"><img src="http://martinusadyh.web.id/wp-content/uploads/2012/01/firefox.png" alt="" /></a>Ingin mencoba <a href="http://www.mozilla.org/en-US/firefox/new/">Firefox 9.0.1</a> di Slackware 13.37 tapi susah mencari file SlackBuild-nya di <a href="http://slackbuilds.org/">SBo</a> ? Jika iya, berarti kita mempunyai permasalahan yang sama :D Awal masalah saya sampai akhirnya mencoba menginstall Firefox adalah, beberapa plugin (ekstension) yang biasa saya gunakan bermasalah terhadap Firefox versi 4.0 bawaan Slackware 13.37 :(</p>

<p>Karena sudah mencoba mencari di <a href="http://slackbuilds.org/">SBo</a> file SlackBuild untuk firefox juga tidak ditemukan, dan ternyata kita cuma mendapatkan file binary saja ketika kita mendownload langsung pada <a href="http://www.mozilla.org/en-US/firefox/new/">situs resmi Firefox</a>. Maka langkah terakhir yang bisa kita lakukan yaitu <strong>menggunakan file SlackBuild firefox 4.0 milik Slackware 13.37</strong> yang bisa di download pada <a href="http://ftp.paudni.kemdiknas.go.id/slackware/slackware64-13.37/source/xap/mozilla-firefox/">mirror lokal slackware</a>. Dari beberapa file yang terdapat pada halaman mirror tersebut, download file-file berikut ini saja :</p>

<ol>
<li><p> mimeTypes.rdf.gz</p></li>
<li><p> mozilla-firefox-mimeTypes-fix.diff.gz</p></li>
<li><p> firefox.png</p></li>
<li><p> mozilla-firefox.desktop</p></li>
<li><p> slack-desc</p></li>
<li><p> mozilla-firefox.SlackBuild</p></li>
</ol>


<p>Setelah selesai mengumpulkan file-file SlackBuild yang diperlukan, sekarang waktunya kita untuk mendownload <strong>source code</strong> firefox yang bisa kita dapatkan pada alamat <a href="ftp://ftp.mozilla.org/pub/mozilla.org/firefox/releases/9.0.1/source/">ftp://ftp.mozilla.org/pub/mozilla.org/firefox/releases/9.0.1/source/</a>. Download-lah 2 file yang diperlukan yaitu :</p>

<ol>
<li><p> firefox-9.0.1.source.tar.bz2.asc</p></li>
<li><p> firefox-9.0.1.source.tar.bz2</p></li>
</ol>


<!-- more -->


<p>Agar proses kompilasi berhasil, sekarang rubah-lah file <code>mozilla-firefox.SlackBuild</code> pada baris 38 yang isinya :</p>

<pre><code>fi
BUILD=${BUILD:-2}

MOZVERS=${MOZVERS:-2.0}
RELEASEVER=$(echo $VERSION | cut -f 1 -d r)
</code></pre>

<p>menjadi seperti dibawah ini :</p>

<pre><code>fi
BUILD=${BUILD:-2}

MOZVERS=${MOZVERS:-release}
RELEASEVER=$(echo $VERSION | cut -f 1 -d r)
</code></pre>

<p>Jika sudah, simpan perubahan yang dilakukan. Dan sekarang masuklah kedalam direktori tempat dimana seluruh file SlackBuild dan source code mozilla-firefox ditempatkan. Dan jalankan perintah <code>./mozilla-firefox.SlackBuild</code> dengan menggunakan <strong>akses root</strong> agar proses kompilasi segera berjalan. Tunggulah beberapa saat sampai proses ini selesai, jika telah selesai maka kita akan mendapatkan file <code>/tmp/mozilla-firefox-9.0.1-x86_64-2.txz</code> yang bisa di install dengan menggunakan perintah <code>installpkg</code> seperti dibawah ini :
[plain]
root@artivisi:/mnt/DATA/SLACKBUILDS/firefox# installpkg /tmp/mozilla-firefox-9.0.1-x86_64-2.txz
Verifying package mozilla-firefox-9.0.1-x86_64-2.txz.
Installing package mozilla-firefox-9.0.1-x86_64-2.txz:
PACKAGE DESCRIPTION:</p>

<h1>mozilla-firefox (Mozilla Firefox Web browser)</h1>

<p>#</p>

<h1>This project is a redesign of the Mozilla browser component written</h1>

<h1>using the XUL user interface language.  Firefox empowers you to</h1>

<h1>browse faster, more safely and more efficiently than with any other</h1>

<h1>browser.</h1>

<p>#</p>

<h1>Visit the Mozilla Firefox project online:</h1>

<h1><a href="http://www.mozilla.org/projects/firefox/">http://www.mozilla.org/projects/firefox/</a></h1>

<p>#
Executing install script for mozilla-firefox-9.0.1-x86_64-2.txz.
Package mozilla-firefox-9.0.1-x86_64-2.txz installed.</p>

<p>root@artivisi:/mnt/DATA/SLACKBUILDS/firefox#
[/plain]</p>

<p>Jika sudah, sekarang mari kita test. Jalankan firefox melalui menu maupun dari terminal/console, dan ketika kita mengecek versi-nya harusnya kita akan mendapatkan tampilan seperti gambar dibawah ini :
<a href="http://martinusadyh.web.id/gallery/?album=4&amp;gallery=3&amp;pid=157"><img src="http://martinusadyh.web.id/wp-content/gallery/tutorial/screenshot_0.png" alt="Mozilla Firefox 9.0.1 on Slackware 13.37" /></a></p>

<p>Bagaimana mudah bukan cara installasi-nya ? Apakah tertarik untuk mencoba mozilla-firefox 9.0.1 ?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Batch Rename with Shell Script]]></title>
    <link href="http://martinusadyh.github.io/2011/09/09/batch-rename-with-shell-script/"/>
    <updated>2011-09-09T19:50:09+07:00</updated>
    <id>http://martinusadyh.github.io/2011/09/09/batch-rename-with-shell-script</id>
    <content type="html"><![CDATA[<p>Kemarin di tempat saya bekerja ada kejadian bagaimana caranya me-rename nama file yang mempunyai akhiran <strong>&ldquo;S&rdquo;</strong> menjadi <strong>&ldquo;R&rdquo;</strong>, masalahnya adalah semua file tersebut tidak mempunyai pattern yang sama kecuali 3 huruf di depan dan 1 huruf dibelakang yaitu huruf <strong>&ldquo;S&rdquo;</strong> yang harus dirubah menjadi <strong>&ldquo;R&rdquo;</strong> :D Contoh nama file yang akan direname kurang lebih seperti terlihat dibawah ini :
[plain]
martinus@artivisi:[~]$ ls
EDW980012011S   EDW980T22011S
EDW980G32011S   EDWSUBS42011S
martinus@artivisi:[~]$
[/plain]</p>

<p>Pada kasus diatas, kita tidak bisa secara langsung melakukan kegiatan <strong>find and replace</strong> biasa. Karena ternyata huruf <strong>&ldquo;S&rdquo;</strong> juga terdapat ditengah-tengah nama file tersebut seperti terlihat pada tampilan diatas :( Setelah bertanya ke paman <a href="http://google.com/">Google</a> sebentar, akhirnya saya menemukan pattern untuk menghapus karakter terakhir dari sebuah string menggunakan command <code>sed</code>. Dan pattern tersebut adalah <code>sed 's/\(.*\)./\1/'</code> :D akhirnya setelah dikombinasikan dengan sedikit kemampuan di shell script jadilah script yang isinya adalah sebagai berikut :</p>

<pre><code>#!/bin/sh

ls EDW* &gt; file.txt

find_file() {
   cat file.txt | sort | cut -d " " -f1
}

for f in $(find_file) ; do
   echo "Original filename $f"
   # tampung nama file yang baru (remove last character)
   newfilename=`echo $f | sed 's/\(.*\)./\1/'`
   echo "After delete last character $newfilename"
   r=R
   newfile1=$newfilename$r
   echo "New filename is $newfile1"
   mv $f $newfile1
done
</code></pre>

<p>Simpan script diatas dengan nama terserah (misalkan <code>batch_rename.sh</code>), kemudian beri akses execute dan jalankan. Jika tidak ada error, harusnya jika dijalankan akan merename semua file menjadi seperti dibawah ini :
[plain]
martinus@artivisi:[~]$ ls
EDW980012011R   EDW980T22011R
EDW980G32011R   EDWSUBS42011R
martinus@artivisi:[~]$
[/plain]</p>

<p>Untuk penjelasan <code>sed</code> dan <code>regex</code>-nya, saya masih belum bisa menjelaskan :D Maklum saya juga masih belajar :D Semoga script diatas bisa berguna juga buat teman-teman yang mempunyai masalah yang sama :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pidgin and GNOME 3]]></title>
    <link href="http://martinusadyh.github.io/2011/09/05/pidgin-and-gnome-3/"/>
    <updated>2011-09-05T01:40:59+07:00</updated>
    <id>http://martinusadyh.github.io/2011/09/05/pidgin-and-gnome-3</id>
    <content type="html"><![CDATA[<p>Sejak menggunakan GNOME 3, saya jarang sekali menggunakan pidgin sebagai pengganti YM (yahoo messenger). Masalahnya yaitu pidgin belum dapat menampilkan notification layaknya Empathy yang sudah ter-integrasi dengan baik di GNOME 3. Nah sebagai gantinya, saya selalu menggunakan Gtalk selama ini sebagai solusi IM :)</p>

<p>Kemarin secara tidak sengaja, saya menemukan sebuah <strong>Pidgin GNOME Shell Extension</strong> yang bisa dilihat <a href="http://blog.kagesenshi.org/2011/04/pidgin-and-gnome3.html">disini</a>, setelah membaca panduan tersebut ternyata caranya sangat mudah yaitu buatlah dahulu direktori <code>pidgin@gnome-shell-extensions.gnome.org</code> didalam direktori <code>~/.local/share/gnome-shell/extensions</code>. Kemudian simpanlah file <a href="https://github.com/kagesenshi/gnome-shell-extensions-pidgin/blob/master/metadata.json">metadata.json</a> dan <a href="https://github.com/kagesenshi/gnome-shell-extensions-pidgin/blob/master/extension.js">extension.js</a> ke direktori <code>pidgin@gnome-shell-extensions.gnome.org</code>.</p>

<p>Jika sudah, sekarang restartlah GNOME Shell dengan menekan tombol <code>ALT+F2</code> kemudian ketik <code>r+ENTER</code>. Setelah melakukan langkah ini, maka harusnya ketika ada seorang teman yang mengajak chatting GNOME akan menampilkan notification-nya seperti gambar dibawah ini :</p>

<p><a href="http://martinusadyh.web.id/gallery/?album=4&amp;gallery=3&amp;pid=146"><img src="http://martinusadyh.web.id/wp-content/gallery/tutorial/pidgin.png" alt="Tampilan Notification Pidgin di GNOME 3" /></a><br/>
Tampilan Notification Pidgin di GNOME 3</p>

<p><a href="http://martinusadyh.web.id/gallery/?album=4&amp;gallery=3&amp;pid=147"><img src="http://martinusadyh.web.id/wp-content/gallery/tutorial/pidgin_0.png" alt="Tampilan Notification Pidgin di GNOME 3" /></a><br/>
Tampilan Notification Pidgin di GNOME 3</p>

<p>Nah dengan begini, gtalk akan saya akses menggunakan pidgin saja :) Dikarenakan fitur utama pidgin yang tidak bisa saya tinggal yaitu adalah fasilitas <strong>logchat</strong>-nya :) Bagaimana dengan teman-teman yang lain, apakah ada fitur bagus di GNOME yang bisa di sharing ? :)</p>

<p><strong>Referensi terkait :</strong></p>

<ol>
<li><p> <a href="http://blog.kagesenshi.org/2011/04/pidgin-and-gnome3.html">Pidgin and GNOME 3</a></p></li>
<li><p> <a href="https://github.com/kagesenshi/gnome-shell-extensions-pidgin">gnome-shell-extensions-pidgin</a></p></li>
</ol>

]]></content>
  </entry>
  
</feed>
